{"version":3,"sources":["components/Header/index.js","components/EmployeeTable/index.js","utils/API.js","components/SearchBox/index.js","utils/util.js","components/Footer/index.js","components/Directory/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Grid","className","container","justify","Icon","color","Typography","variant","align","EmployeeTable","props","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","TableSortLabel","active","orderBy","direction","order","onClick","handleSort","TableBody","employees","map","emp","hover","alt","firstName","lastName","src","image","email","phone","id","API","axios","get","SearchBox","TextField","label","type","name","onChange","handleInputChange","util","value","empArray","filter","toLowerCase","includes","key","a","b","optionA","toUpperCase","optionB","comparison","Footer","class","href","target","Directory","state","loadedEmployees","search","event","setState","queriedEmps","col","sortedList","sort","newList","then","response","employeeData","data","results","picture","medium","first","last","catch","err","console","log","this","Component","App","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f8f4528.chunk.js","sourcesContent":["import React from \"react\";\nimport Grid from '@material-ui/core/Grid';\nimport Typography from \"@material-ui/core/Typography\"\nimport \"./style.css\";\nimport Icon from '@material-ui/core/Icon';\n\nfunction Header() {\n    return (\n        <>\n            <Grid className=\"Header-heading header-style\" container justify=\"center\">\n                <Icon className=\"far fa-id-badge fa-5x\" color=\"secondary\" />\n                <Typography className=\"pl-3\" variant=\"h2\" align=\"center\" color=\"secondary\">Employee Directory</Typography>\n            </Grid>\n        </>\n    )\n}\n\nexport default Header;","import React from \"react\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport \"./style.css\";\n\nfunction EmployeeTable(props) {\n    return (\n        <TableContainer className=\"table-style\">\n            <Table stickyHeader aria-label=\"Employee Table\">\n\n                {/* Table header with titles for employees info */}\n                <TableHead>\n                    <TableRow>\n                        <TableCell align=\"center\">IMAGE</TableCell>\n                        <TableCell align=\"center\">FIRST NAME\n                            <TableSortLabel active={props.orderBy === \"firstName\"} direction={props.order} onClick={() => props.handleSort(\"firstName\", props.order)}></TableSortLabel>\n                        </TableCell>\n                        <TableCell align=\"center\">LAST NAME\n                        <TableSortLabel active={props.orderBy === \"lastName\"} direction={props.order} onClick={() => props.handleSort(\"lastName\", props.order)}></TableSortLabel>\n                        </TableCell>\n                        <TableCell align=\"center\">EMAIL\n                        <TableSortLabel active={props.orderBy === \"email\"} direction={props.order} onClick={() => props.handleSort(\"email\", props.order)}></TableSortLabel>\n                        </TableCell>\n                        <TableCell align=\"center\">PHONE NUMBER</TableCell>\n                    </TableRow>\n                </TableHead>\n\n                {/* Table body containing employees info */}\n                <TableBody>\n                    {\n                        props.employees.map(emp => {\n                            return <TableRow hover key={emp.id}>\n                                <TableCell align=\"center\"><img alt={`${emp.firstName} ${emp.lastName}`} src={emp.image}></img></TableCell>\n                                <TableCell align=\"center\">{emp.firstName}</TableCell>\n                                <TableCell align=\"center\">{emp.lastName}</TableCell>\n                                <TableCell align=\"center\">{emp.email}</TableCell>\n                                <TableCell align=\"center\">{emp.phone}</TableCell>\n                            </TableRow>\n                        })\n                    }\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n\nexport default EmployeeTable;","import axios from \"axios\";\n\nconst API = {\n    getEmployees: function () {\n        return axios.get(\"https://randomuser.me/api/?results=200&nat=us\")\n    }\n}\n\nexport { API }","import React from \"react\";\nimport TextField from '@material-ui/core/TextField';\n\nfunction SearchBox(props) {\n    return (\n        <TextField color=\"secondary\" variant=\"outlined\" label=\"Search Here\" type=\"search\" name=\"search\" onChange={props.handleInputChange} />\n    )\n}\n\nexport default SearchBox;","const util = {\n\n    // Check empArray to find item matching the search\n    searchEmployees: (value, empArray) => {\n        let searchedEmps = empArray.filter((emp) => {\n            return emp.firstName.toLowerCase().includes(value.toLowerCase()) || \n            emp.lastName.toLowerCase().includes(value.toLowerCase()) || \n            emp.phone.toLowerCase().includes(value.toLowerCase())\n        })\n        return searchedEmps;\n    },\n\n    // Function to compare values in array and sort \"asc\" or \"desc\"\n    // Cited:  https://www.sitepoint.com/sort-an-array-of-objects-in-javascript/\n    compareValues: (key, order = \"asc\") => {\n        return function compare(a, b) {\n            // Use toUpperCase() to ignore character casing\n            const optionA = a[key].toUpperCase();\n            const optionB = b[key].toUpperCase();\n\n            let comparison = 0;\n            if (optionA > optionB) {\n                comparison = 1;\n            } else if (optionA < optionB) {\n                comparison = -1;\n            }\n            return (\n                (order === \"desc\") ? (comparison * -1) : comparison\n            );\n        };\n    }\n}\n\nexport { util }","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n    return (\n        <div class=\"navbar justify-content-center\">\n            <span class=\"navbar-brand footer-font text-color\">Copyright &copy;2020 | Chase\n          Johnston</span>\n            <span >\n                <a class=\"fab fa-github fa-lg icon-color pr-3\" href=\"https://github.com/johnstoc13\" target=\"_blank\"></a>\n                <a class=\"fab fa-linkedin fa-lg icon-color pr-3\" href=\"https://www.linkedin.com/in/chase-johnston8\"\n                    target=\"_blank\"></a>\n                <a class=\"fas fa-envelope fa-lg icon-color\" href=\"mailto:chasej@live.com\" target=\"_blank\"></a>\n            </span>\n        </div>\n    )\n}\n\nexport default Footer;","import React, { Component } from \"react\";\nimport Header from \"../Header\";\nimport EmployeeTable from \"../EmployeeTable\";\nimport { API } from \"../../utils/API\";\nimport \"./style.css\";\nimport Grid from '@material-ui/core/Grid';\nimport SearchBox from \"../SearchBox\";\nimport {util} from \"../../utils/util\";\nimport Footer from \"../Footer\";\n\nclass Directory extends Component {\n\n    state = {\n        employees: [],\n        loadedEmployees: [],\n        search: \"\",\n        orderBy: \"\",\n        order: \"asc\"\n    }\n\n    // Query API for random user data and store in employees state\n    componentDidMount() {\n        API.getEmployees()\n            .then(response => {\n                let employeeData = response.data.results.map(emp => {\n                    return {\n                        id: emp.id.value,\n                        image: emp.picture.medium,\n                        firstName: emp.name.first,\n                        lastName: emp.name.last,\n                        email: emp.email,\n                        phone: emp.phone\n                    }\n                })\n                this.setState({\n                    employees: employeeData,\n                    loadedEmployees: employeeData\n                })\n            })\n            .catch(err => console.log(err));\n    }\n\n    // Function to allow user to search the employee directory\n    // Cited: https://reactjs.org/docs/forms.html\n    handleInputChange = event => {\n        let value = event.target.value;\n        const name = event.target.name;\n        // Set the state to that of the input\n        this.setState({\n            [name]: value\n        }, () => {\n            // Filter employee list\n            if (this.state.search) {\n                let queriedEmps = util.searchEmployees(this.state.search, this.state.loadedEmployees);\n                this.setState({\n                    employees: queriedEmps,\n                    orderBy: \"\"\n                })\n            } else {\n                this.setState({\n                    employees: this.state.loadedEmployees,\n                    orderBy: \"\"\n                })\n            }\n        });\n    };\n\n    // Function to allow user to sort directory by each column\n    handleSort = (col, order) => {\n        let sortedList = [...this.state.employees].sort(util.compareValues(col, order));\n        let newList = order === \"asc\" ? \"desc\" : \"asc\"\n        this.setState({\n            employees: sortedList,\n            order: newList,\n            orderBy: col\n        });\n    }\n\n    // Render the content\n    render() {\n        return (\n            <div>\n                <Header />\n                <Grid className=\"search-style\" container justify=\"center\">\n                    <SearchBox employees={this.state.employees} handleInputChange={this.handleInputChange} />\n                </Grid>\n                <EmployeeTable employees={this.state.employees} handleSort={this.handleSort} orderBy={this.state.orderBy} order={this.state.order} />\n                <Footer />\n            </div>\n        )\n    }\n}\n\nexport default Directory;","import Container from '@material-ui/core/Container';\nimport Directory from './components/Directory';\n\nfunction App() {\n  return (\n    <Container>\n      <Directory />\n    </Container>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}